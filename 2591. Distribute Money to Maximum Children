#!/usr/bin/python
"""You can see the description of the task using the code specified in the title on leetcode.
This program has O(1) complexity by time and O(1) by space.

An unpleasant condition, but I was able to solve it without iterations.
Donâ€™t forget to subtract 1 if the remainder is three or there is more money than needed.

"""

class Solution:
    def distMoney(self, money: int, children: int) -> int:
        money -= children
        if money < 0: return -1
        enoght = money // 7
        if enoght >= children:
            return children if enoght == children and money % 7 == 0 else children - 1
        else:
            if enoght < 1: return 0
            if money % 7 != 3:
                return enoght
            else:
                return enoght - 1 if children - enoght == 1 else enoght
