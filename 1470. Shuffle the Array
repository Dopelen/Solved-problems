#!/usr/bin/python
"""You can see the description of the task using the code specified in the title on letcode.
This program has O(n) complexity by time because we go through the entire list to create new one.
And O(n) by space, bc we are creating new list.

Nice and clear solution.

"""

class Solution:
    def shuffle(self, nums: List[int], n: int) -> List[int]:
        ans = []
        for x, y in zip(nums[:n], nums[n:]):
            ans += [x, y]
        return ans
