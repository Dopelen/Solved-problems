#!/usr/bin/python
"""You can see the description of the task using the code specified in the title on leÐµtcode.
This program has O(n) complexity by time and O(n) by space.

I recently learned about trees, but I remember something!
Recursive solution

"""

class Solution:
    def mergeTrees(self, root1: Optional[TreeNode], root2: Optional[TreeNode]) -> Optional[TreeNode]:
        if root1 is None:
            return root2
        if root2 is None:
            return root1
        root1.val += root2.val
        root1.left = self.mergeTrees(root1.left, root2.left)
        root1.right = self.mergeTrees(root1.right, root2.right)
        return root1
