#!/usr/bin/python
"""You can see the description of the task using the code specified in the title on leetcode.
This program has O(k * log_base_k_(n))  complexity by time and O(n) by space.
(We need to carry out an operation with segments, how many segments there will be depends on the size k and the number of elements n.
A number of operations will be performed on each segment (if you need to reverse the line). The total comes out to * logarithm to base k of n)

Itâ€™s nice that when the right border lies to the right of the maximum length, then all possible elements are simply taken without any errors!

"""

class Solution:
    def reverseStr(self, s: str, k: int) -> str:
        ans = []
        even = True
        for i in range(0, len(s), k):
            if even:
                ans += list(reversed(s[i:i+k]))
            else: 
                ans += s[i:i+k]
            even= not even
        return "".join(ans)
