#!/usr/bin/python
"""You can see the description of the task using the code specified in the title on letcode.
This program has O(n(log(n))) complexity by time and O(n) by space.

The day will come when I will start writing "enumerate" correctly. But not today.

"""

class Solution:
    def kWeakestRows(self, mat: List[List[int]], k: int) -> List[int]:
        hierarchy = []
        for ind, row in enumerate(mat):
            hierarchy.append((sum(row), ind))
        hierarchy.sort(key = lambda x: (x[0], x[1]))
        return [elem[1] for elem in hierarchy[:k]]
