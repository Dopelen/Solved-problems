#!/usr/bin/python
"""You can see the description of the task using the code specified in the title on leetcode.
This program has O(n * m) complexity by time and O(1) by space.

I wrote an algorithm for traversing the entire matrix diagonally, and almost went crazy, and then I watched the stream for an hour...
...returned to the problem... and solved it in 2 minutes without any headaches. The matrices wanted to destroy me again.

"""

class Solution:
    def isToeplitzMatrix(self, matrix: List[List[int]]) -> bool:
        lenght, height = len(matrix[0]), len(matrix)
        current = matrix[0]
        for row in range(1, height):
            next = matrix[row]
            for elem in range(lenght - 1):
                if current[elem] != next[elem + 1]:
                    return False
            current = next
        return True
