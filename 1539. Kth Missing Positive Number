#!/usr/bin/python
"""You can see the description of the task using the code specified in the title on letcode.
 This program have O(n(log(n)) complexity by time, because of sorting

The option with one element spoiled my beautiful solution using sets a little, but overall itâ€™s ok"""

class Solution:
    def findKthPositive(self, arr, k):
        if len(arr) == 1:
            if arr[-1] > k:
                return arr[-1] - 1
            else:
                return k + 1
        helper = set([i for i in range(1, arr[-1]+1)])
        missing = list(sorted(helper - set(arr)))
        if len(missing) >= k:
             return missing[k-1]
        elif len(missing) == 0:
            return arr[-1] + k
        return sorted(helper)[-1] - (len(missing) - k)
