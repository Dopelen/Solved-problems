#!/usr/bin/python
"""You can see the description of the task using the code specified in the title on leetcode.
This program has O(n(log(n))) complexity by time and O(n) by space.

I completely forgot the format, I had to remember.
Knowing the multiplicity of the incoming array, we do not need to calculate the edges; we can immediately trim the sorted array.

"""

class Solution:
    def trimMean(self, arr: List[int]) -> float:
        size = len(arr)
        portion_5 = size // 20
        new_arr = sorted(arr)[portion_5:size - portion_5]   
        return round(sum(new_arr) / (size - 2 * portion_5), 5)
