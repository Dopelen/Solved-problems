#!/usr/bin/python
"""You can see the description of the task using the code specified in the title on leetcode
Everything about this problem looked so suboptimal to me that I initially solved it this way with tears.

"""

# O(n ** 3)
class Solution:
    def incremovableSubarrayCount(self, nums: List[int]) -> int:
        size = len(nums)
        ans = 0
        for i in range(size):
            for j in range(i + 1, size + 1):
                cur = nums[:i] + nums[j:]
                if cur == sorted(cur) and len(cur) == len(set(cur)):
                    ans += 1
        return ans
