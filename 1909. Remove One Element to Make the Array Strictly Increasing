#!/usr/bin/python
"""You can see the description of the task using the code specified in the title on leetcode.
This program has O(n ** 2) complexity by time and O(n) by space.

I tried 4 solution methods and messed up somewhere in all of them. Sad day.

"""

class Solution:
    def canBeIncreasing(self, nums: List[int]) -> bool:
        prev = -math.inf
        fail = False
        for i, x in enumerate(nums): 
            if prev < x: 
                prev = x
            else: 
                if fail: return False 
                fail = True 
                if i == 1 or nums[i-2] < x: 
                    prev = x
        return True 
