#!/usr/bin/python
"""You can see the description of the task using the code specified in the title on leetcode.
This program has O(n) complexity by time and O(1) by space.

I solved the problem by simply enumerating cases. It turned out clear, albeit big.

"""

class Solution:
    def lemonadeChange(self, bills: List[int]) -> bool:
        money = {5:0, 10:0, 20:0}
        for el in bills:
            money[el] += 1
            if el == 10:
                money[5] -= 1
            elif el == 20:
                if money[10] and money[5]:
                    money[10] -= 1
                    money[5] -= 1
                elif not money[10] and money[5]:
                    money[5] -= 3
                else:
                    return False
            if money[5] < 0:
                return False
        return True
