#!/usr/bin/python
"""You can see the description of the task using the code specified in the title on leetcode.
This program has O(n) complexity by time and O(n) by space.

For some reason, thinking out loud greatly speeds up my solution.
The remark that I remember ALL the neighbors of numbers greatly simplifies this task, in this case we need to find the first node that has 1 neighbor and build the entire list from it.
"""

# After refactoring
class Solution:
    def restoreArray(self, adjacentPairs: List[List[int]]) -> List[int]:
        adj_list = defaultdict(list)
        for num_1, num_2 in adjacentPairs:
            adj_list[num_1].append(num_2)
            adj_list[num_2].append(num_1)
        start = next(node for node in adj_list if len(adj_list[node]) == 1)
        final_list = [start]
        prev = start
        current = adj_list[start][0]
        while len(adj_list[current]) == 2:
            final_list.append(current)
            next_elem = adj_list[current][0] if adj_list[current][1] == prev else adj_list[current][1]
            prev, current = current, next_elem
        final_list.append(current)
        return final_list


# Before refactoring
class Solution:
    def restoreArray(self, adjacentPairs: List[List[int]]) -> List[int]:
        adj_list = defaultdict(list)
        for num_1, num_2 in adjacentPairs:
            adj_list[num_1].append(num_2)
            adj_list[num_2].append(num_1)
        final_list = []
        for elem, neighbours in adj_list.items():
            if len(neighbours) == 1:
                final_list.append(elem)
                next_elem = adj_list[elem][0]
                while len(adj_list[next_elem]) != 1:
                    if adj_list[next_elem][0] == elem:
                        elem = next_elem
                        next_elem = adj_list[next_elem][1]
                    else:
                        elem = next_elem
                        next_elem = adj_list[next_elem][0]
                    final_list.append(elem)
                return final_list + [next_elem]
