#!/usr/bin/python
"""You can see the description of the task using the code specified in the title on leetcode.
This program has O(n) complexity by time and O(n) by space.

It seemed like a simple task, but I stopped several times and ended up overdoing it. 
As a result, the solution was written in 5 minutes, but the task itself took almost an hour.
Unfortunately, real understanding of the problem does not come so quickly.

"""

class Solution:
    def getLongestSubsequence(self, words: List[str], groups: List[int]) -> List[str]:
        ans = [words[0]]
        last = groups[0]
        for i in range(1, len(words)):
            if groups[i] != last:
                ans.append(words[i])
                last = groups[i]
        return ans
