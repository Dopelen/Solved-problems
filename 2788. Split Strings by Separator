#!/usr/bin/python
"""You can see the description of the task using the code specified in the title on leetcode.
This program has O(n) complexity by time and O(n) by space.
But im sure second solution is the fastest.

"""

# RegEx
class Solution:
    def splitWordsBySeparator(self, words: List[str], separator: str) -> List[str]:
        words = f"{separator}".join(words)
        replaced = re.sub(f'({re.escape(separator)})\\1+', r"\1", words)
        return [word for word in replaced.split(separator) if word != ""]


# Sympler and clearler way
class Solution:
    def splitWordsBySeparator(self, words: List[str], separator: str) -> List[str]:
        answ=[]
        for word in words:
            for w in word.split(separator):
                if w:
                    answ.append(w)
        return answ  


# Cool one
class Solution:
    def splitWordsBySeparator(self, words: List[str], separator: str) -> List[str]:
      return re.findall(f"[^{separator}]+",separator.join(words))
