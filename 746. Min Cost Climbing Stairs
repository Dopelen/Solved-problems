#!/usr/bin/python
"""You can see the description of the task using the code specified in the title on leetcode.
This program has:
O(n) by time and O(1) by space.

My brain refused to solve this problem, even though I solved a complicated version of it with negative numbers a year ago using dynamic programming.

"""

class Solution:
    def minCostClimbingStairs(self, cost: List[int]) -> int:
        cost.append(0)
        for i in range(len(cost) - 4, -1, -1):
            cost[i] += min(cost[i+1], cost[i+2])
        return min(cost[0], cost[1])

