#!/usr/bin/python
"""You can see the description of the task using the code specified in the title on leetcode. 
This programm has O(n) complexity by time and O(n) by space.

To my shame, I think very poorly today. 
I wrote a huge code because I really wanted to solve it in linear time using prefixes, but the solution somehow didnâ€™t fit. 
I spent a lot of time, in the end I rewrote it and this is what happened.
"""

class Solution:
    def minOperations(self, boxes: str) -> List[int]:
        size = len(boxes)
        answer = [0] * size
        prefCount = prefCost = sufCount = sufCost = 0
        for i in range(1, size):
            if boxes[i-1] == '1': 
                prefCount += 1
            prefCost += prefCount
            answer[i] = prefCost
        for i in range(size-2, -1, -1):
            if boxes[i+1] == '1': 
                sufCount += 1
            sufCost += sufCount
            answer[i] += sufCost
        return answer
