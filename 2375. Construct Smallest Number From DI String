#!/usr/bin/python
"""You can see the description of the task using the code specified in the title on leetcode.
So this program has O(n) complexity by time and O(n) by space.

I struggled with trying out all the possible permutations and combinations, and then I found a laconic solution
"""

class Solution:
    def smallestNumber(self, pattern: str) -> str:
        size = len(pattern)
        result = ""
        stack = []

        for i in range(size + 1):
            stack.append(i + 1)
            if i == size or pattern[i] == 'I':
                while stack:
                    result += str(stack.pop())
        return result
