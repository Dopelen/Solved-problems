#!/usr/bin/python
"""You can see the description of the task using the code specified in the title on leetcode.
This program has O(n*m) complexity by time and same by space.

It seems like a simple task, but I was terribly slow

"""

class Solution:
    def findMissingAndRepeatedValues(self, grid):
        answer_list = []
        size = len(grid)
        for elem in grid:
            for chank in elem:
                answer_list.append(chank)        
        m = dict(Counter(answer_list))
        a, b = -1, -1
        for i in range(1, size * size + 1):
            if m.get(i) == 2:
                a = i
            elif m.get(i) is None:
                b = i
        return [a, b]
