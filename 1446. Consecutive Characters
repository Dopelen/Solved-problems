#!/usr/bin/python
"""You can see the description of the task using the code specified in the title on leetcode.
This program has O(n) complexity by time and O(1) by space.

A simple typical subsequence problem.
Donâ€™t forget an additional check at the end in case the loop ends after a repeating element and its value is not output in answer.

"""

class Solution:
    def maxPower(self, s: str) -> int:
        prev = s[0]
        ans = maxi = 0
        for i in range(len(s)):
            if s[i] == prev:
                ans += 1
            else:
                prev = s[i]
                maxi = max(ans, maxi)
                ans = 1
        maxi = max(ans, maxi)
        return maxi
